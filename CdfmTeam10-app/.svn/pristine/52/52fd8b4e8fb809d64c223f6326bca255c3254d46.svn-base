package com.gtanla.android.cloud;

import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Collection;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.HttpStatus;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.params.HttpParams;
import org.apache.http.params.HttpProtocolParams;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.gtanla.android.cloud.bo.Account;

public class BackendClient {

	/** Backend url. */
	private static String backendUrl;

	/** Instance. */
	private static BackendClient instance;

	private static final String UTF_8 = "UTF-8";

	/**
	 * Get instance.
	 * 
	 * @return
	 */
	public static BackendClient getInstance() {
		if (instance == null) {
			instance = new BackendClient();
		}
		return instance;
	}

	/**
	 * Set backend server name
	 * 
	 * @param value
	 *            backend server name
	 * 
	 */
	public static void setBackendUrl(String value) {
		backendUrl = value;
	}

	/** HTTP client. */
	private final DefaultHttpClient client;

	/**
	 * Constructor.
	 */
	private BackendClient() {

		// Set HTTP client parameters
		client = new DefaultHttpClient();
		HttpParams httpParams = new BasicHttpParams();
		HttpProtocolParams.setContentCharset(httpParams, UTF_8);
		client.setParams(httpParams);
	}

	public Collection<Account> createAccount(Account account) {
		Collection res = null;

		// Prepare parameters
		// List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>() ();
		// nameValuePairs.add(new BasicNameValuePair("registrationid", "123456789"));

		// Prepare request
		// HttpPost request = new HttpPost("http://" + backendUrl + "/rest/accounts");
		// request.setHeader("Content-type", "application/json; charset=UTF-8");
		// request.setHeader("Accept-Language", "fr-FR");
		// post.setEntity(new UrlEncodedFormEntity(nameValuePairs));
		//
		// HttpResponse response = client.execute(request);
		return res;
	}

	/**
	 * Create a new GET request
	 * 
	 * @param uri
	 *            URI
	 * @return a GET request
	 */
	private HttpGet createNewHttpGet(String uri) {
		HttpGet request = new HttpGet("http://" + backendUrl + uri);
		request.setHeader("Content-type", "application/json; charset=UTF-8");
		request.setHeader("Accept-Language", "fr-FR");
		return request;
	}

	/**
	 * List all accounts
	 * 
	 * @return
	 */
	public Collection<Account> listAccounts() throws BackendException {

		try {
			// Prepare request
			HttpGet request = createNewHttpGet("/rest/accounts");

			// execute request
			HttpResponse response = client.execute(request);

			// Check http status code
			if (response.getStatusLine().getStatusCode() != HttpStatus.SC_OK) {
				throw new BackendException("Error during cloud call : " + response.getStatusLine().getStatusCode());
			}

			// Parse json results
			Gson gson = new Gson();
			List<Account> accounts = gson.fromJson(new InputStreamReader(response.getEntity().getContent()),
					new TypeToken<List<Account>>() {
					}.getType());

			// Return result
			return accounts;

		} catch (ClientProtocolException e) {
			throw new BackendException(e);
		} catch (IOException e) {
			throw new BackendException(e);
		}
	}
}
